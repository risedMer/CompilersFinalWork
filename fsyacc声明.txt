fsyacc YACC(Yet AnotherCompiler Compiler)

fsyacc 处理扩展名为 .fsy，文件分为三个部分：
1. 头部，一段纯 F# 代码，用 % 和 {} 括起来，%{ 表示开始，%}表示结束
   用于导入自己的抽象语法树模块，为创建抽象语法树而定义的简单的辅助函数
2. 声明，定义了语言中的终结符。
   终结符：语法中的一些具体名词，比如标识符名或符号
3. 组成语法的规则

终结符声明的几种不同形式：
%token               声明给定符号
%token<type>   声明给定符号，定义类型
%start                声明解释器开始解析的规则
%type<type>     声明特定规则的类型
%left                  声明符号作为左关联，解决语法歧义
%right                声明符号作为右关联，解决语法歧义
%nonassoc         声明符号作为无关联，解决语法歧义

声明与规则用 %% 分隔开

每个规则必须有名字 + 冒号
然后是组成规则的所有条目的定义，之间用 | 隔开
组成规则的条目 可以是已经定义的符号名，也可以是规则名，后面必须跟
                        一个动作，用 {} 括起来的 F# 代码
例子：
Expression: ID { Ident($1) }
	| FLOAT { Val($1) }
Expression 规则名 
ID 和 FLOAT 为两个规则 
{} 里是规则的动作
用 $ + num 表示我们感兴趣的条目的位置
规则里注释应用 /* */ 来标记
所有终结符都大写