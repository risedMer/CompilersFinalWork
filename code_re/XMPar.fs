// Implementation file for parser generated by fsyacc
module XMPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "XMPar.fsy"


open XMAbsyn

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码
let fit (a, _, _) = a
let sed (_, b, _) = b
let thd (_, _, c) = c


# 18 "XMPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | BREAK
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFPLUS
  | SELFMINUS
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | DO
  | FOR
  | FLOAT
  | SLEEP
  | CSTCHAR of (char)
  | CSTFLOAT of (float32)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_BREAK
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_FOR
    | TOKEN_FLOAT
    | TOKEN_SLEEP
    | TOKEN_CSTCHAR
    | TOKEN_CSTFLOAT
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_VardecAndAssign
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstF
    | NONTERM_ConstC
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | BREAK  -> 11 
  | NOT  -> 12 
  | SEQOR  -> 13 
  | SEQAND  -> 14 
  | EQ  -> 15 
  | NE  -> 16 
  | GT  -> 17 
  | LT  -> 18 
  | GE  -> 19 
  | LE  -> 20 
  | PLUS  -> 21 
  | MINUS  -> 22 
  | TIMES  -> 23 
  | DIV  -> 24 
  | MOD  -> 25 
  | SELFPLUS  -> 26 
  | SELFMINUS  -> 27 
  | CHAR  -> 28 
  | ELSE  -> 29 
  | IF  -> 30 
  | INT  -> 31 
  | NULL  -> 32 
  | PRINT  -> 33 
  | PRINTLN  -> 34 
  | RETURN  -> 35 
  | VOID  -> 36 
  | WHILE  -> 37 
  | DO  -> 38 
  | FOR  -> 39 
  | FLOAT  -> 40 
  | SLEEP  -> 41 
  | CSTCHAR _ -> 42 
  | CSTFLOAT _ -> 43 
  | CSTSTRING _ -> 44 
  | NAME _ -> 45 
  | CSTINT _ -> 46 
  | CSTBOOL _ -> 47 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_BREAK 
  | 12 -> TOKEN_NOT 
  | 13 -> TOKEN_SEQOR 
  | 14 -> TOKEN_SEQAND 
  | 15 -> TOKEN_EQ 
  | 16 -> TOKEN_NE 
  | 17 -> TOKEN_GT 
  | 18 -> TOKEN_LT 
  | 19 -> TOKEN_GE 
  | 20 -> TOKEN_LE 
  | 21 -> TOKEN_PLUS 
  | 22 -> TOKEN_MINUS 
  | 23 -> TOKEN_TIMES 
  | 24 -> TOKEN_DIV 
  | 25 -> TOKEN_MOD 
  | 26 -> TOKEN_SELFPLUS 
  | 27 -> TOKEN_SELFMINUS 
  | 28 -> TOKEN_CHAR 
  | 29 -> TOKEN_ELSE 
  | 30 -> TOKEN_IF 
  | 31 -> TOKEN_INT 
  | 32 -> TOKEN_NULL 
  | 33 -> TOKEN_PRINT 
  | 34 -> TOKEN_PRINTLN 
  | 35 -> TOKEN_RETURN 
  | 36 -> TOKEN_VOID 
  | 37 -> TOKEN_WHILE 
  | 38 -> TOKEN_DO 
  | 39 -> TOKEN_FOR 
  | 40 -> TOKEN_FLOAT 
  | 41 -> TOKEN_SLEEP 
  | 42 -> TOKEN_CSTCHAR 
  | 43 -> TOKEN_CSTFLOAT 
  | 44 -> TOKEN_CSTSTRING 
  | 45 -> TOKEN_NAME 
  | 46 -> TOKEN_CSTINT 
  | 47 -> TOKEN_CSTBOOL 
  | 50 -> TOKEN_end_of_input
  | 48 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_VardecAndAssign 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_AtExprNotAccess 
    | 68 -> NONTERM_AtExprNotAccess 
    | 69 -> NONTERM_AtExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Exprs 
    | 78 -> NONTERM_Exprs 
    | 79 -> NONTERM_Exprs1 
    | 80 -> NONTERM_Exprs1 
    | 81 -> NONTERM_Const 
    | 82 -> NONTERM_Const 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Const 
    | 85 -> NONTERM_ConstF 
    | 86 -> NONTERM_ConstF 
    | 87 -> NONTERM_ConstC 
    | 88 -> NONTERM_Type 
    | 89 -> NONTERM_Type 
    | 90 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 50 
let _fsyacc_tagOfErrorTerminal = 48

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | BREAK  -> "BREAK" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | FOR  -> "FOR" 
  | FLOAT  -> "FLOAT" 
  | SLEEP  -> "SLEEP" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | SLEEP  -> (null : System.Object) 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 5us; 65535us; 11us; 14us; 12us; 15us; 13us; 15us; 18us; 19us; 20us; 21us; 6us; 65535us; 0us; 9us; 4us; 9us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 11us; 65535us; 33us; 34us; 37us; 38us; 43us; 65us; 46us; 65us; 49us; 65us; 52us; 65us; 69us; 65us; 70us; 65us; 79us; 65us; 84us; 65us; 86us; 65us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 69us; 94us; 9us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 69us; 55us; 70us; 71us; 79us; 80us; 84us; 85us; 86us; 87us; 9us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 69us; 56us; 70us; 93us; 79us; 96us; 84us; 95us; 86us; 97us; 41us; 65535us; 27us; 28us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 67us; 68us; 69us; 57us; 70us; 57us; 73us; 74us; 75us; 76us; 77us; 78us; 79us; 57us; 82us; 83us; 84us; 57us; 86us; 57us; 89us; 90us; 99us; 100us; 108us; 109us; 111us; 137us; 114us; 115us; 116us; 117us; 140us; 119us; 141us; 120us; 142us; 121us; 143us; 122us; 144us; 123us; 145us; 124us; 146us; 125us; 147us; 126us; 148us; 127us; 149us; 128us; 150us; 129us; 151us; 130us; 152us; 131us; 153us; 132us; 154us; 133us; 155us; 135us; 159us; 134us; 170us; 136us; 173us; 137us; 41us; 65535us; 27us; 105us; 43us; 105us; 46us; 105us; 49us; 105us; 52us; 105us; 59us; 105us; 67us; 105us; 69us; 105us; 70us; 105us; 73us; 105us; 75us; 105us; 77us; 105us; 79us; 105us; 82us; 105us; 84us; 105us; 86us; 105us; 89us; 105us; 99us; 105us; 108us; 105us; 111us; 105us; 114us; 105us; 116us; 105us; 140us; 105us; 141us; 105us; 142us; 105us; 143us; 105us; 144us; 105us; 145us; 105us; 146us; 105us; 147us; 105us; 148us; 105us; 149us; 105us; 150us; 105us; 151us; 105us; 152us; 105us; 153us; 105us; 154us; 105us; 155us; 105us; 159us; 106us; 170us; 105us; 173us; 105us; 42us; 65535us; 27us; 107us; 43us; 107us; 46us; 107us; 49us; 107us; 52us; 107us; 59us; 107us; 67us; 107us; 69us; 107us; 70us; 107us; 73us; 107us; 75us; 107us; 77us; 107us; 79us; 107us; 82us; 107us; 84us; 107us; 86us; 107us; 89us; 107us; 99us; 107us; 108us; 107us; 111us; 107us; 114us; 107us; 116us; 107us; 140us; 107us; 141us; 107us; 142us; 107us; 143us; 107us; 144us; 107us; 145us; 107us; 146us; 107us; 147us; 107us; 148us; 107us; 149us; 107us; 150us; 107us; 151us; 107us; 152us; 107us; 153us; 107us; 154us; 107us; 155us; 107us; 159us; 107us; 167us; 169us; 170us; 107us; 173us; 107us; 44us; 65535us; 27us; 104us; 43us; 104us; 46us; 104us; 49us; 104us; 52us; 104us; 59us; 104us; 67us; 104us; 69us; 104us; 70us; 104us; 73us; 104us; 75us; 104us; 77us; 104us; 79us; 104us; 82us; 104us; 84us; 104us; 86us; 104us; 89us; 104us; 99us; 104us; 108us; 104us; 111us; 104us; 114us; 104us; 116us; 104us; 140us; 104us; 141us; 104us; 142us; 104us; 143us; 104us; 144us; 104us; 145us; 104us; 146us; 104us; 147us; 104us; 148us; 104us; 149us; 104us; 150us; 104us; 151us; 104us; 152us; 104us; 153us; 104us; 154us; 104us; 155us; 104us; 159us; 103us; 161us; 162us; 164us; 165us; 167us; 168us; 170us; 104us; 173us; 104us; 1us; 65535us; 111us; 112us; 2us; 65535us; 111us; 172us; 173us; 174us; 42us; 65535us; 27us; 156us; 43us; 156us; 46us; 156us; 49us; 156us; 52us; 156us; 59us; 156us; 67us; 156us; 69us; 156us; 70us; 156us; 73us; 156us; 75us; 156us; 77us; 156us; 79us; 156us; 82us; 156us; 84us; 156us; 86us; 156us; 89us; 156us; 99us; 156us; 108us; 156us; 111us; 156us; 114us; 156us; 116us; 156us; 140us; 156us; 141us; 156us; 142us; 156us; 143us; 156us; 144us; 156us; 145us; 156us; 146us; 156us; 147us; 156us; 148us; 156us; 149us; 156us; 150us; 156us; 151us; 156us; 152us; 156us; 153us; 156us; 154us; 156us; 155us; 156us; 159us; 156us; 167us; 156us; 170us; 156us; 173us; 156us; 42us; 65535us; 27us; 157us; 43us; 157us; 46us; 157us; 49us; 157us; 52us; 157us; 59us; 157us; 67us; 157us; 69us; 157us; 70us; 157us; 73us; 157us; 75us; 157us; 77us; 157us; 79us; 157us; 82us; 157us; 84us; 157us; 86us; 157us; 89us; 157us; 99us; 157us; 108us; 157us; 111us; 157us; 114us; 157us; 116us; 157us; 140us; 157us; 141us; 157us; 142us; 157us; 143us; 157us; 144us; 157us; 145us; 157us; 146us; 157us; 147us; 157us; 148us; 157us; 149us; 157us; 150us; 157us; 151us; 157us; 152us; 157us; 153us; 157us; 154us; 157us; 155us; 157us; 159us; 157us; 167us; 157us; 170us; 157us; 173us; 157us; 42us; 65535us; 27us; 158us; 43us; 158us; 46us; 158us; 49us; 158us; 52us; 158us; 59us; 158us; 67us; 158us; 69us; 158us; 70us; 158us; 73us; 158us; 75us; 158us; 77us; 158us; 79us; 158us; 82us; 158us; 84us; 158us; 86us; 158us; 89us; 158us; 99us; 158us; 108us; 158us; 111us; 158us; 114us; 158us; 116us; 158us; 140us; 158us; 141us; 158us; 142us; 158us; 143us; 158us; 144us; 158us; 145us; 158us; 146us; 158us; 147us; 158us; 148us; 158us; 149us; 158us; 150us; 158us; 151us; 158us; 152us; 158us; 153us; 158us; 154us; 158us; 155us; 158us; 159us; 158us; 167us; 158us; 170us; 158us; 173us; 158us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 25us; 32us; 35us; 38us; 42us; 54us; 59us; 65us; 75us; 85us; 127us; 169us; 212us; 257us; 259us; 262us; 305us; 348us; 391us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 2us; 7us; 13us; 3us; 7us; 13us; 15us; 3us; 7us; 11us; 12us; 4us; 7us; 11us; 12us; 13us; 1us; 8us; 2us; 8us; 15us; 1us; 9us; 3us; 9us; 11us; 12us; 1us; 10us; 3us; 10us; 11us; 12us; 1us; 10us; 2us; 11us; 12us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 13us; 16us; 13us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 32us; 36us; 1us; 26us; 16us; 27us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 16us; 29us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 31us; 3us; 32us; 36us; 37us; 3us; 32us; 36us; 37us; 18us; 32us; 36us; 37us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 3us; 32us; 36us; 37us; 2us; 32us; 36us; 1us; 32us; 2us; 33us; 39us; 2us; 33us; 39us; 17us; 33us; 39us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 2us; 33us; 39us; 17us; 33us; 39us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 2us; 33us; 39us; 17us; 33us; 39us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 2us; 33us; 39us; 1us; 33us; 2us; 34us; 38us; 2us; 34us; 38us; 17us; 34us; 38us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 2us; 34us; 38us; 1us; 34us; 2us; 35us; 40us; 1us; 35us; 1us; 35us; 1us; 35us; 16us; 35us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 1us; 40us; 1us; 40us; 16us; 40us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 40us; 1us; 40us; 4us; 41us; 44us; 73us; 76us; 3us; 41us; 44us; 76us; 1us; 42us; 2us; 42us; 70us; 1us; 43us; 1us; 44us; 16us; 44us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 2us; 45us; 72us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 16us; 46us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 47us; 16us; 47us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 48us; 16us; 49us; 50us; 51us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 52us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 15us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 16us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 76us; 17us; 49us; 50us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 79us; 80us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 2us; 70us; 73us; 1us; 70us; 1us; 71us; 2us; 71us; 76us; 1us; 72us; 1us; 73us; 2us; 73us; 76us; 1us; 73us; 2us; 74us; 75us; 2us; 74us; 76us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 78us; 1us; 80us; 1us; 80us; 1us; 81us; 1us; 82us; 2us; 83us; 86us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 35us; 40us; 42us; 45us; 47us; 51us; 53us; 57us; 59us; 62us; 64us; 66us; 68us; 70us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 109us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 136us; 138us; 140us; 144us; 146us; 163us; 165us; 168us; 170us; 187us; 189us; 191us; 193us; 195us; 199us; 203us; 222us; 226us; 229us; 231us; 234us; 237us; 255us; 258us; 276us; 279us; 297us; 300us; 302us; 305us; 308us; 326us; 329us; 331us; 334us; 336us; 338us; 340us; 357us; 359us; 361us; 363us; 365us; 367us; 369us; 371us; 373us; 375us; 392us; 394us; 396us; 401us; 405us; 407us; 410us; 412us; 414us; 431us; 434us; 436us; 438us; 440us; 442us; 459us; 461us; 478us; 480us; 497us; 514us; 531us; 548us; 565us; 582us; 599us; 616us; 633us; 650us; 667us; 684us; 701us; 718us; 735us; 751us; 768us; 785us; 803us; 805us; 807us; 809us; 811us; 813us; 815us; 817us; 819us; 821us; 823us; 825us; 827us; 829us; 831us; 833us; 835us; 837us; 839us; 841us; 843us; 845us; 848us; 850us; 852us; 855us; 857us; 859us; 862us; 864us; 867us; 870us; 872us; 874us; 876us; 878us; 880us; 882us; 884us; 886us; 889us; 891us; 893us; 895us; 897us; 899us; 901us; 903us; |]
let _fsyacc_action_rows = 186
let _fsyacc_actionTableElements = [|4us; 16386us; 28us; 184us; 31us; 183us; 36us; 29us; 40us; 185us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 28us; 184us; 31us; 183us; 36us; 29us; 40us; 185us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 7us; 10us; 0us; 16390us; 3us; 32768us; 1us; 20us; 23us; 18us; 45us; 16us; 3us; 32768us; 1us; 20us; 23us; 18us; 45us; 16us; 3us; 32768us; 1us; 20us; 23us; 18us; 45us; 17us; 1us; 16391us; 5us; 23us; 2us; 16391us; 5us; 23us; 9us; 27us; 0us; 16392us; 1us; 16392us; 1us; 35us; 3us; 32768us; 1us; 20us; 23us; 18us; 45us; 16us; 1us; 16393us; 5us; 23us; 3us; 32768us; 1us; 20us; 23us; 18us; 45us; 16us; 2us; 32768us; 2us; 22us; 5us; 23us; 0us; 16394us; 2us; 32768us; 6us; 24us; 46us; 25us; 0us; 16395us; 1us; 32768us; 6us; 26us; 0us; 16396us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 15us; 16397us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 1us; 32768us; 45us; 30us; 1us; 32768us; 1us; 31us; 3us; 16400us; 28us; 184us; 31us; 183us; 40us; 185us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 3us; 16400us; 28us; 184us; 31us; 183us; 40us; 185us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 3us; 32768us; 28us; 184us; 31us; 183us; 40us; 185us; 0us; 16403us; 26us; 16405us; 1us; 159us; 3us; 43us; 10us; 161us; 11us; 63us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 28us; 184us; 30us; 66us; 31us; 183us; 32us; 179us; 33us; 116us; 34us; 118us; 35us; 59us; 37us; 81us; 38us; 86us; 39us; 72us; 40us; 185us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 1us; 32768us; 4us; 45us; 0us; 16404us; 26us; 16405us; 1us; 159us; 3us; 43us; 10us; 161us; 11us; 63us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 28us; 184us; 30us; 66us; 31us; 183us; 32us; 179us; 33us; 116us; 34us; 118us; 35us; 59us; 37us; 81us; 38us; 86us; 39us; 72us; 40us; 185us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16406us; 1us; 32768us; 7us; 49us; 26us; 16405us; 1us; 159us; 3us; 43us; 10us; 161us; 11us; 63us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 28us; 184us; 30us; 66us; 31us; 183us; 32us; 179us; 33us; 116us; 34us; 118us; 35us; 59us; 37us; 81us; 38us; 86us; 39us; 72us; 40us; 185us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16407us; 1us; 32768us; 7us; 52us; 26us; 16405us; 1us; 159us; 3us; 43us; 10us; 161us; 11us; 63us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 28us; 184us; 30us; 66us; 31us; 183us; 32us; 179us; 33us; 116us; 34us; 118us; 35us; 59us; 37us; 81us; 38us; 86us; 39us; 72us; 40us; 185us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 29us; 70us; 0us; 16410us; 16us; 32768us; 7us; 58us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 0us; 16411us; 17us; 32768us; 1us; 159us; 7us; 60us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16412us; 16us; 32768us; 7us; 62us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 0us; 16413us; 1us; 32768us; 7us; 64us; 0us; 16414us; 0us; 16415us; 1us; 32768us; 1us; 67us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 2us; 69us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 23us; 32768us; 1us; 159us; 3us; 43us; 10us; 161us; 11us; 63us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 30us; 66us; 32us; 179us; 33us; 116us; 34us; 118us; 35us; 59us; 37us; 81us; 38us; 86us; 39us; 72us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 23us; 32768us; 1us; 159us; 3us; 43us; 10us; 161us; 11us; 63us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 30us; 66us; 32us; 179us; 33us; 116us; 34us; 118us; 35us; 59us; 37us; 81us; 38us; 86us; 39us; 72us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16416us; 1us; 32768us; 1us; 73us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 7us; 75us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 7us; 77us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 2us; 79us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 23us; 32768us; 1us; 159us; 3us; 43us; 10us; 161us; 11us; 63us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 30us; 66us; 32us; 179us; 33us; 116us; 34us; 118us; 35us; 59us; 37us; 81us; 38us; 86us; 39us; 72us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16417us; 1us; 32768us; 1us; 82us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 2us; 84us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 23us; 32768us; 1us; 159us; 3us; 43us; 10us; 161us; 11us; 63us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 30us; 66us; 32us; 179us; 33us; 116us; 34us; 118us; 35us; 59us; 37us; 81us; 38us; 86us; 39us; 72us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16418us; 23us; 32768us; 1us; 159us; 3us; 43us; 10us; 161us; 11us; 63us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 30us; 66us; 32us; 179us; 33us; 116us; 34us; 118us; 35us; 59us; 37us; 81us; 38us; 86us; 39us; 72us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 1us; 32768us; 37us; 88us; 1us; 32768us; 1us; 89us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 2us; 91us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 1us; 32768us; 7us; 92us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 1us; 32768us; 37us; 98us; 1us; 32768us; 1us; 99us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 2us; 101us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 1us; 32768us; 7us; 102us; 0us; 16424us; 3us; 16425us; 2us; 166us; 5us; 170us; 9us; 108us; 2us; 16425us; 5us; 170us; 9us; 108us; 0us; 16426us; 1us; 16426us; 2us; 160us; 0us; 16427us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 15us; 16428us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 1us; 16456us; 1us; 111us; 16us; 16461us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 1us; 32768us; 2us; 113us; 0us; 16429us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16430us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 15us; 16431us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 0us; 16432us; 2us; 16435us; 26us; 138us; 27us; 139us; 2us; 16436us; 26us; 138us; 27us; 139us; 15us; 16437us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 5us; 16438us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 5us; 16439us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 2us; 16440us; 26us; 138us; 27us; 139us; 2us; 16441us; 26us; 138us; 27us; 139us; 2us; 16442us; 26us; 138us; 27us; 139us; 11us; 16443us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 11us; 16444us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 11us; 16445us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 11us; 16446us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 11us; 16447us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 11us; 16448us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 13us; 16449us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 15us; 32768us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 14us; 16450us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 16us; 32768us; 6us; 171us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 16us; 16463us; 8us; 173us; 13us; 155us; 14us; 154us; 15us; 148us; 16us; 149us; 17us; 150us; 18us; 151us; 19us; 152us; 20us; 153us; 21us; 143us; 22us; 144us; 23us; 145us; 24us; 146us; 25us; 147us; 26us; 138us; 27us; 139us; 0us; 16433us; 0us; 16434us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16451us; 0us; 16452us; 0us; 16453us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16454us; 3us; 32768us; 1us; 164us; 23us; 167us; 45us; 163us; 1us; 16455us; 5us; 170us; 0us; 16456us; 3us; 32768us; 1us; 164us; 23us; 167us; 45us; 163us; 2us; 32768us; 2us; 166us; 5us; 170us; 0us; 16457us; 10us; 32768us; 1us; 159us; 10us; 161us; 22us; 177us; 23us; 167us; 32us; 179us; 42us; 182us; 43us; 180us; 45us; 163us; 46us; 175us; 47us; 176us; 1us; 16458us; 5us; 170us; 0us; 16459us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16460us; 0us; 16462us; 16us; 32768us; 1us; 159us; 10us; 161us; 12us; 114us; 22us; 177us; 23us; 167us; 26us; 140us; 27us; 141us; 32us; 179us; 33us; 116us; 34us; 118us; 41us; 142us; 42us; 182us; 43us; 180us; 45us; 110us; 46us; 175us; 47us; 176us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 2us; 32768us; 43us; 181us; 46us; 178us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 21us; 22us; 26us; 30us; 34us; 36us; 39us; 40us; 42us; 46us; 48us; 52us; 55us; 56us; 59us; 60us; 62us; 63us; 80us; 96us; 98us; 100us; 104us; 106us; 108us; 109us; 113us; 115us; 117us; 118us; 119us; 121us; 125us; 126us; 153us; 155us; 156us; 183us; 184us; 186us; 213us; 214us; 216us; 243us; 244us; 245us; 247us; 248us; 265us; 266us; 284us; 285us; 302us; 303us; 305us; 306us; 307us; 309us; 326us; 343us; 367us; 391us; 392us; 394us; 411us; 428us; 445us; 462us; 479us; 496us; 520us; 521us; 523us; 540us; 557us; 581us; 582us; 606us; 608us; 610us; 627us; 644us; 646us; 647us; 648us; 649us; 650us; 651us; 653us; 655us; 672us; 689us; 691us; 692us; 696us; 699us; 700us; 702us; 703us; 720us; 736us; 738us; 755us; 757us; 758us; 775us; 776us; 793us; 809us; 810us; 813us; 816us; 832us; 838us; 844us; 847us; 850us; 853us; 865us; 877us; 889us; 901us; 913us; 925us; 939us; 955us; 970us; 987us; 1004us; 1005us; 1006us; 1023us; 1040us; 1057us; 1074us; 1091us; 1108us; 1125us; 1142us; 1159us; 1176us; 1193us; 1210us; 1227us; 1244us; 1261us; 1278us; 1279us; 1280us; 1281us; 1298us; 1299us; 1303us; 1305us; 1306us; 1310us; 1313us; 1314us; 1325us; 1327us; 1328us; 1345us; 1346us; 1347us; 1364us; 1365us; 1366us; 1367us; 1370us; 1371us; 1372us; 1373us; 1374us; 1375us; 1376us; 1377us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 2us; 1us; 2us; 3us; 3us; 4us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 2us; 1us; 7us; 9us; 5us; 7us; 7us; 5us; 5us; 9us; 7us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 22us; 23us; 24us; 24us; 24us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 65535us; 65535us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 65535us; 16414us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 16420us; 16421us; 16422us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 16424us; 65535us; 65535us; 16426us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16433us; 16434us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16451us; 16452us; 16453us; 65535us; 16454us; 65535us; 65535us; 16456us; 65535us; 65535us; 16457us; 65535us; 65535us; 16459us; 65535us; 16460us; 16462us; 65535us; 16464us; 16465us; 16466us; 65535us; 16467us; 16468us; 16469us; 16470us; 16471us; 16472us; 16473us; 16474us; |]
let _fsyacc_reductions ()  =    [| 
# 469 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> XMAbsyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 478 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "XMPar.fsy"
                                                               Prog _1 
                   )
# 44 "XMPar.fsy"
                 : XMAbsyn.program));
# 489 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "XMPar.fsy"
                                                               [] 
                   )
# 49 "XMPar.fsy"
                 : 'gentype_Topdecs));
# 499 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "XMPar.fsy"
                                                               _1 :: _2 
                   )
# 50 "XMPar.fsy"
                 : 'gentype_Topdecs));
# 511 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "XMPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 54 "XMPar.fsy"
                 : 'gentype_Topdec));
# 522 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "XMPar.fsy"
                                                               _1 
                   )
# 55 "XMPar.fsy"
                 : 'gentype_Topdec));
# 533 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "XMPar.fsy"
                                                               VardecAndAssign (fit _1, sed _1, thd _1) 
                   )
# 56 "XMPar.fsy"
                 : 'gentype_Topdec));
# 544 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "XMPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 60 "XMPar.fsy"
                 : 'gentype_Vardec));
# 556 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "XMPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 64 "XMPar.fsy"
                 : 'gentype_Vardesc));
# 567 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "XMPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 65 "XMPar.fsy"
                 : 'gentype_Vardesc));
# 578 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "XMPar.fsy"
                                                               _2                                      
                   )
# 66 "XMPar.fsy"
                 : 'gentype_Vardesc));
# 589 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "XMPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 67 "XMPar.fsy"
                 : 'gentype_Vardesc));
# 600 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "XMPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 68 "XMPar.fsy"
                 : 'gentype_Vardesc));
# 612 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "XMPar.fsy"
                                                                ((fst _2) _1, snd _2, _4) 
                   )
# 72 "XMPar.fsy"
                 : 'gentype_VardecAndAssign));
# 625 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "XMPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 76 "XMPar.fsy"
                 : 'gentype_Fundec));
# 638 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "XMPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 77 "XMPar.fsy"
                 : 'gentype_Fundec));
# 652 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "XMPar.fsy"
                                                               [] 
                   )
# 82 "XMPar.fsy"
                 : 'gentype_Paramdecs));
# 662 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "XMPar.fsy"
                                                               _1 
                   )
# 83 "XMPar.fsy"
                 : 'gentype_Paramdecs));
# 673 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "XMPar.fsy"
                                                               [_1]     
                   )
# 87 "XMPar.fsy"
                 : 'gentype_Paramdecs1));
# 684 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "XMPar.fsy"
                                                               _1 :: _3 
                   )
# 88 "XMPar.fsy"
                 : 'gentype_Paramdecs1));
# 696 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "XMPar.fsy"
                                                               Block _2 
                   )
# 92 "XMPar.fsy"
                 : 'gentype_Block));
# 707 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "XMPar.fsy"
                                                               [] 
                   )
# 96 "XMPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 717 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "XMPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 97 "XMPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 729 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "XMPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 98 "XMPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 741 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "XMPar.fsy"
                                                               DecAndAssign (fit _1, sed _1, thd _1) :: _3 
                   )
# 99 "XMPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 753 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "XMPar.fsy"
                                                               _1 
                   )
# 103 "XMPar.fsy"
                 : 'gentype_Stmt));
# 764 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "XMPar.fsy"
                                                               _1 
                   )
# 104 "XMPar.fsy"
                 : 'gentype_Stmt));
# 775 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "XMPar.fsy"
                                                               Expr(_1)             
                   )
# 108 "XMPar.fsy"
                 : 'gentype_StmtM));
# 786 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "XMPar.fsy"
                                                               Return None          
                   )
# 109 "XMPar.fsy"
                 : 'gentype_StmtM));
# 796 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "XMPar.fsy"
                                                               Return(Some(_2))     
                   )
# 110 "XMPar.fsy"
                 : 'gentype_StmtM));
# 807 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "XMPar.fsy"
                                                               Break                
                   )
# 111 "XMPar.fsy"
                 : 'gentype_StmtM));
# 817 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "XMPar.fsy"
                                                               _1                   
                   )
# 112 "XMPar.fsy"
                 : 'gentype_StmtM));
# 828 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "XMPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 113 "XMPar.fsy"
                 : 'gentype_StmtM));
# 841 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "XMPar.fsy"
                                                                        For(_3, _5, _7, _9) 
                   )
# 114 "XMPar.fsy"
                 : 'gentype_StmtM));
# 855 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "XMPar.fsy"
                                                               While(_3, _5)        
                   )
# 115 "XMPar.fsy"
                 : 'gentype_StmtM));
# 867 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "XMPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 116 "XMPar.fsy"
                 : 'gentype_StmtM));
# 879 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "XMPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 120 "XMPar.fsy"
                 : 'gentype_StmtU));
# 892 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "XMPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 121 "XMPar.fsy"
                 : 'gentype_StmtU));
# 904 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "XMPar.fsy"
                                                               While(_3, _5)        
                   )
# 122 "XMPar.fsy"
                 : 'gentype_StmtU));
# 916 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "XMPar.fsy"
                                                                        For(_3, _5, _7, _9) 
                   )
# 123 "XMPar.fsy"
                 : 'gentype_StmtU));
# 930 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtU in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "XMPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 124 "XMPar.fsy"
                 : 'gentype_StmtU));
# 942 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "XMPar.fsy"
                                                               Access _1           
                   )
# 128 "XMPar.fsy"
                 : 'gentype_Expr));
# 953 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "XMPar.fsy"
                                                               _1                  
                   )
# 129 "XMPar.fsy"
                 : 'gentype_Expr));
# 964 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "XMPar.fsy"
                                                               _1                  
                   )
# 133 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 975 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "XMPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 134 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 987 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "XMPar.fsy"
                                                               Call(_1, _3)        
                   )
# 135 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 999 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "XMPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 136 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1010 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "XMPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 137 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1021 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "XMPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 138 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1031 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "XMPar.fsy"
                                                               Prim1("i++", _1)    
                   )
# 139 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1042 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "XMPar.fsy"
                                                               Prim1("i--", _1)    
                   )
# 140 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1053 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "XMPar.fsy"
                                                               Prim1("++i", _2)    
                   )
# 141 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1064 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "XMPar.fsy"
                                                               Prim1("--i", _2)    
                   )
# 142 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1075 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "XMPar.fsy"
                                                               Prim1("sleep", _2)  
                   )
# 143 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1086 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "XMPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 144 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1098 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "XMPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 145 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1110 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "XMPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 146 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1122 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "XMPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 147 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1134 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "XMPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 148 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1146 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "XMPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 149 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1158 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "XMPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 150 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1170 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "XMPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 151 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1182 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "XMPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 152 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1194 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "XMPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 153 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1206 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "XMPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 154 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1218 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "XMPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 155 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1230 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "XMPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 156 "XMPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1242 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "XMPar.fsy"
                                                               CstI _1             
                   )
# 161 "XMPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1253 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstF in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "XMPar.fsy"
                                                               CstF _1             
                   )
# 162 "XMPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1264 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstC in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "XMPar.fsy"
                                                               CstC _1             
                   )
# 163 "XMPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1275 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "XMPar.fsy"
                                                               _2                  
                   )
# 164 "XMPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1286 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "XMPar.fsy"
                                                               Addr _2             
                   )
# 165 "XMPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1297 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "XMPar.fsy"
                                                               AccVar _1           
                   )
# 169 "XMPar.fsy"
                 : 'gentype_Access));
# 1308 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "XMPar.fsy"
                                                               _2                  
                   )
# 170 "XMPar.fsy"
                 : 'gentype_Access));
# 1319 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "XMPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 171 "XMPar.fsy"
                 : 'gentype_Access));
# 1330 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "XMPar.fsy"
                                                               AccDeref _2         
                   )
# 172 "XMPar.fsy"
                 : 'gentype_Access));
# 1341 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "XMPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 173 "XMPar.fsy"
                 : 'gentype_Access));
# 1353 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "XMPar.fsy"
                                                               []       
                   )
# 177 "XMPar.fsy"
                 : 'gentype_Exprs));
# 1363 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "XMPar.fsy"
                                                               _1       
                   )
# 178 "XMPar.fsy"
                 : 'gentype_Exprs));
# 1374 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "XMPar.fsy"
                                                               [_1]     
                   )
# 182 "XMPar.fsy"
                 : 'gentype_Exprs1));
# 1385 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "XMPar.fsy"
                                                               _1 :: _3 
                   )
# 183 "XMPar.fsy"
                 : 'gentype_Exprs1));
# 1397 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "XMPar.fsy"
                                                               _1       
                   )
# 187 "XMPar.fsy"
                 : 'gentype_Const));
# 1408 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "XMPar.fsy"
                                                               _1       
                   )
# 188 "XMPar.fsy"
                 : 'gentype_Const));
# 1419 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "XMPar.fsy"
                                                               - _2     
                   )
# 189 "XMPar.fsy"
                 : 'gentype_Const));
# 1430 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "XMPar.fsy"
                                                               -1       
                   )
# 190 "XMPar.fsy"
                 : 'gentype_Const));
# 1440 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "XMPar.fsy"
                                                               _1       
                   )
# 194 "XMPar.fsy"
                 : 'gentype_ConstF));
# 1451 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "XMPar.fsy"
                                                               - _2     
                   )
# 195 "XMPar.fsy"
                 : 'gentype_ConstF));
# 1462 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "XMPar.fsy"
                                                               _1       
                   )
# 199 "XMPar.fsy"
                 : 'gentype_ConstC));
# 1473 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "XMPar.fsy"
                                                               TypI     
                   )
# 203 "XMPar.fsy"
                 : 'gentype_Type));
# 1483 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "XMPar.fsy"
                                                               TypC     
                   )
# 204 "XMPar.fsy"
                 : 'gentype_Type));
# 1493 "XMPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "XMPar.fsy"
                                                               TypF     
                   )
# 205 "XMPar.fsy"
                 : 'gentype_Type));
|]
# 1504 "XMPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 51;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : XMAbsyn.program =
    engine lexer lexbuf 0 :?> _
